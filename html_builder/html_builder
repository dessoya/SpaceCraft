#!/usr/bin/env node-harmony
'use sctrict'

var cerber			= require('cerber')
  , fs				= require('fs')
  , util			= require('util')
  , http			= require('http')
  , errors			= require('errors')
  , cc				= require('cconfig')
  , coroutine		= require('coroutine')

  , Builder			= require('./Builder.js')

cerber.initService()

http.globalAgent.maxSockets = 200

errors.activateCatcher()

coroutine(function*(params, sv) {

	var jsonContent = yield fs.readFile(cerber.daemonPath + '/html_builder.config.json', sv.resume)
	global.config = JSON.parse(('' + jsonContent).replace(/\/\*.+\*\//g, ''))
	var commonConfig = JSON.parse(yield fs.readFile(cerber.daemonPath + '/../config/config.json', sv.resume))

	var branch = process.env.SC_BRANCH || 'trunk'
	console.log('use config branch ' + branch)

	global.config = yield cc.create(config, branch, commonConfig, sv.onlyok)

	global.builder = Builder.create(config.static_source, config.pages, config.builds)

}, null, function(event, data) {
	if(GE_ERROR === event) {
		console.showError(data)
		process.exit(255)
	}
})

